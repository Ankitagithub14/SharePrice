<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4556" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:57 BST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4556" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:57 BST">
      <class name="Testng.NewTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Testng.NewTest@473b46c3]" name="beforeTest" is-config="true" duration-ms="6" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Testng.NewTest@473b46c3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Testng.NewTest@473b46c3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Testng.NewTest@473b46c3]" name="f" duration-ms="5" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testng.NewTest@473b46c3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Testng.NewTest@473b46c3]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:52 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Testng.NewTest@473b46c3]" name="afterTest" is-config="true" duration-ms="0" started-at="2021-08-19T07:10:57 BST" finished-at="2021-08-19T07:10:57 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Testng.NewTest -->
      <class name="SharePriceCenter.SharePriceCenter_Elite">
        <test-method status="PASS" signature="share_price()[pri:0, instance:SharePriceCenter.SharePriceCenter_Elite@221af3c0]" name="share_price" duration-ms="4505" started-at="2021-08-19T07:10:52 BST" finished-at="2021-08-19T07:10:57 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- share_price -->
        <test-method status="FAIL" signature="tearDown(org.testng.ITestResult)[pri:0, instance:SharePriceCenter.SharePriceCenter_Elite@221af3c0]" name="tearDown" is-config="true" duration-ms="6" started-at="2021-08-19T07:10:57 BST" finished-at="2021-08-19T07:10:57 BST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=share_price status=SUCCESS method=SharePriceCenter_Elite.share_price()[pri:0, instance:SharePriceCenter.SharePriceCenter_Elite@221af3c0] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at SharePriceCenter.SharePriceCenter_Elite.tearDown(SharePriceCenter_Elite.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SharePriceCenter.SharePriceCenter_Elite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
